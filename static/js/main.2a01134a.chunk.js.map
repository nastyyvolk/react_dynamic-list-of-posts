{"version":3,"sources":["components/PostsList/PostsList.tsx","api/comments.ts","api/posts.ts","components/Loader/Loader.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["PostsList","props","posts","openPost","selectedPostId","className","map","post","userId","body","type","onClick","postId","id","BASE_URL","getComments","a","fetch","comments","json","commentsJson","filter","comment","Error","createComment","method","headers","JSON","stringify","deleteComment","commentId","getUserPosts","endpoint","serverResponse","getPostDetails","Loader","NewCommentForm","onAdd","useState","name","setName","email","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","PostDetails","resetPost","commentsVisible","showHideComments","setComments","updateComments","commentsFromServer","addComment","deleteThisComment","useEffect","then","response","title","current","length","getUsers","users","usersJson","App","selectedUser","selectUser","setPosts","selectPost","setUsers","serverUsers","serverPosts","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a01134a.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[];\n  openPost: (id: number) => void;\n  selectedPostId: number;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { posts, openPost, selectedPostId } = props;\n\n  const changeselectedPostId = (postId: number) => {\n    const id = postId === selectedPostId ? 0 : postId;\n\n    openPost(id);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n              </b>\n              {post.body}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => changeselectedPostId(post.id)}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const getComments = async (postId: number) => {\n  try {\n    const comments = await fetch(`${BASE_URL}comments`);\n    const commentsJson: Comment[] = await comments.json();\n\n    return commentsJson.filter((comment: Comment) => comment.postId === postId);\n  } catch (error) {\n    throw new Error(`Fetching comments: ${error}`);\n  }\n};\n\nexport const createComment = async (comment: Partial<Comment>) => {\n  return fetch(`${BASE_URL}comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n};\n\nexport const deleteComment = async (commentId: number) => {\n  return fetch(`${BASE_URL}comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const getUserPosts = async (userId: number) => {\n  try {\n    const endpoint = userId === 0 ? 'posts/' : `posts?userId=${userId}`;\n    const serverResponse = await fetch(`${BASE_URL}${endpoint}`);\n    const posts = await serverResponse.json();\n\n    return posts;\n  } catch (error) {\n    throw new Error(`Fetch failed: ${error}`);\n  }\n};\n\nexport const getPostDetails = async (postId: number) => {\n  try {\n    const serverResponse = await fetch(`${BASE_URL}posts/${postId}`);\n    const post = await serverResponse.json();\n\n    return post;\n  } catch (error) {\n    throw new Error(`Fetch failed: ${error}`);\n  }\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  selectedPostId: number;\n  onAdd: (comment: Partial<Comment>) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { selectedPostId, onAdd } = props;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId: selectedPostId,\n      name,\n      email,\n      body,\n    };\n\n    onAdd(newComment);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { createComment, getComments, deleteComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [post, resetPost] = useState(null as Post | null);\n  const [commentsVisible, showHideComments] = useState(true);\n  const [comments, setComments] = useState([] as Comment[]);\n\n  const updateComments = async () => {\n    const commentsFromServer = await getComments(selectedPostId);\n\n    setComments(commentsFromServer);\n  };\n\n  const addComment = async (comment: Partial<Comment>) => {\n    await createComment(comment);\n    updateComments();\n  };\n\n  const deleteThisComment = async (id: number) => {\n    await deleteComment(id);\n    updateComments();\n  };\n\n  useEffect(() => {\n    if (selectedPostId === 0) {\n      resetPost(null);\n\n      return;\n    }\n\n    getPostDetails(selectedPostId)\n      .then(response => resetPost(response));\n\n    updateComments();\n  }, [selectedPostId]);\n\n  if (!post || !comments) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => showHideComments(current => !current)}\n        >\n          {commentsVisible ? 'Hide ' : 'Show '}\n          {comments.length}\n          {' comments'}\n        </button>\n        {commentsVisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteThisComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            onAdd={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport const getUsers = async () => {\n  try {\n    const users = await fetch(`${BASE_URL}users?limit=10`);\n    const usersJson = await users.json();\n\n    return usersJson;\n  } catch (error) {\n    throw new Error(`Fetching users: ${error}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\nimport { getUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [selectedUser, selectUser] = useState(0);\n  const [posts, setPosts] = useState([] as Post[]);\n  const [selectedPostId, selectPost] = useState(0);\n  const [users, setUsers] = useState([] as User[]);\n\n  useEffect(() => {\n    getUsers()\n      .then(serverUsers => setUsers(serverUsers));\n  }, []);\n\n  useEffect(() => {\n    getUserPosts(selectedUser)\n      .then(serverPosts => setPosts(serverPosts));\n  }, [selectedUser]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => selectUser(+event.target.value)}\n            value={selectedUser}\n          >\n            <option value=\"0\">All users</option>\n            {\n              users.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            openPost={selectPost}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {!!selectedPostId && (\n            <PostDetails selectedPostId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}